// Basic Exercises involving Bools

type Bool {
  true
  false
}

// Is true
// Returns true if input is true
is_true(a: Bool): Bool
  a

// Is false
// Returns true if input is false
is_false(a: Bool): Bool
  case a {
    true: Bool.false
    false: Bool.true
  }

// Negation
// Returns the opposite of a Bool
neg(b: Bool): Bool
  case b {
    true: Bool.false
    false: Bool.true
  }

// And
// Returns true if both inputs are true
and(a: Bool, b: Bool): Bool
  case a b {
    true true: Bool.true
  } default Bool.false

// Or
// Returs true if any input is true
or(a: Bool, b: Bool): Bool
  case a {
    true: Bool.true
    false: b
  }

// Equal
// Returs true if both inputs are identical
eql(a: Bool, b: Bool): Bool
  case a {
    true: b
    false: is_false(b)
  }

// Xor
// Returns true if both inputs are different
xor(a: Bool, b: Bool): Bool
  case a {
    true: is_false(b)
    false: b
  }

// Nor
// Returns true if both inputs are false
nor(a: Bool, b: Bool): Bool
  case a {
    true: Bool.false
    false: is_false(b)
  }

// Nand
// Returns false only if both inputs are true
nand(a: Bool, b: Bool): Bool
  case a {
    true: case b {
      true: Bool.false
      false: Bool.true
    }
    false: Bool.true
  }

// Xnor
// Returns true if both inputs are identical
xnor(a: Bool, b: Bool): Bool
  case a {
    true: b
    false: neg(b)
  }
